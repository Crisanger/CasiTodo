//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CasiTodo.Logica.Entidades
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class bdCasiTodoPruebaEntities : DbContext
    {
        public bdCasiTodoPruebaEntities()
            : base("name=bdCasiTodoPruebaEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<ACTIVEGUARD> ACTIVEGUARD { get; set; }
        public virtual DbSet<ACTIVETRACK> ACTIVETRACK { get; set; }
        public virtual DbSet<CIUDAD> CIUDAD { get; set; }
        public virtual DbSet<CLIENTE> CLIENTE { get; set; }
        public virtual DbSet<COMPUTADOR> COMPUTADOR { get; set; }
        public virtual DbSet<EJECUTIVO> EJECUTIVO { get; set; }
        public virtual DbSet<GPRS> GPRS { get; set; }
        public virtual DbSet<GPS> GPS { get; set; }
        public virtual DbSet<GUARDA> GUARDA { get; set; }
        public virtual DbSet<MARCA> MARCA { get; set; }
        public virtual DbSet<OPERADOR> OPERADOR { get; set; }
        public virtual DbSet<PLATAFORMA> PLATAFORMA { get; set; }
        public virtual DbSet<PUESTO> PUESTO { get; set; }
        public virtual DbSet<SERVICIO> SERVICIO { get; set; }
        public virtual DbSet<SISTEMAOPERATIVO> SISTEMAOPERATIVO { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<TIPOCLIENTE> TIPOCLIENTE { get; set; }
        public virtual DbSet<TIPODEIDENTIFICACION> TIPODEIDENTIFICACION { get; set; }
        public virtual DbSet<TIPOUSUARIO> TIPOUSUARIO { get; set; }
        public virtual DbSet<USUARIO> USUARIO { get; set; }
        public virtual DbSet<ZONA> ZONA { get; set; }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int spAdministrarActiveGuard(string cSerial, string cCuenta, Nullable<int> nPuesCodigo, string cNumero, Nullable<int> nOperCodigo, string cBateria, string cDescripcion, Nullable<int> nOpcion, ObjectParameter cMensaje)
        {
            var cSerialParameter = cSerial != null ?
                new ObjectParameter("cSerial", cSerial) :
                new ObjectParameter("cSerial", typeof(string));
    
            var cCuentaParameter = cCuenta != null ?
                new ObjectParameter("cCuenta", cCuenta) :
                new ObjectParameter("cCuenta", typeof(string));
    
            var nPuesCodigoParameter = nPuesCodigo.HasValue ?
                new ObjectParameter("nPuesCodigo", nPuesCodigo) :
                new ObjectParameter("nPuesCodigo", typeof(int));
    
            var cNumeroParameter = cNumero != null ?
                new ObjectParameter("cNumero", cNumero) :
                new ObjectParameter("cNumero", typeof(string));
    
            var nOperCodigoParameter = nOperCodigo.HasValue ?
                new ObjectParameter("nOperCodigo", nOperCodigo) :
                new ObjectParameter("nOperCodigo", typeof(int));
    
            var cBateriaParameter = cBateria != null ?
                new ObjectParameter("cBateria", cBateria) :
                new ObjectParameter("cBateria", typeof(string));
    
            var cDescripcionParameter = cDescripcion != null ?
                new ObjectParameter("cDescripcion", cDescripcion) :
                new ObjectParameter("cDescripcion", typeof(string));
    
            var nOpcionParameter = nOpcion.HasValue ?
                new ObjectParameter("nOpcion", nOpcion) :
                new ObjectParameter("nOpcion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spAdministrarActiveGuard", cSerialParameter, cCuentaParameter, nPuesCodigoParameter, cNumeroParameter, nOperCodigoParameter, cBateriaParameter, cDescripcionParameter, nOpcionParameter, cMensaje);
        }
    
        public virtual ObjectResult<spConsultarActiveGuard_Result> spConsultarActiveGuard()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spConsultarActiveGuard_Result>("spConsultarActiveGuard");
        }
    
        public virtual ObjectResult<spConsultarActiveGuard2_Result> spConsultarActiveGuard2()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spConsultarActiveGuard2_Result>("spConsultarActiveGuard2");
        }
    
        public virtual ObjectResult<spConsultarEstadisticas_Result> spConsultarEstadisticas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spConsultarEstadisticas_Result>("spConsultarEstadisticas");
        }
    
        public virtual ObjectResult<spConsultarOperador_Result> spConsultarOperador()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spConsultarOperador_Result>("spConsultarOperador");
        }
    
        public virtual ObjectResult<spConsultarPuesto_Result> spConsultarPuesto()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spConsultarPuesto_Result>("spConsultarPuesto");
        }
    
        public virtual ObjectResult<Nullable<int>> spConsultarUsuario(string cNombre, string cPassword)
        {
            var cNombreParameter = cNombre != null ?
                new ObjectParameter("cNombre", cNombre) :
                new ObjectParameter("cNombre", typeof(string));
    
            var cPasswordParameter = cPassword != null ?
                new ObjectParameter("cPassword", cPassword) :
                new ObjectParameter("cPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spConsultarUsuario", cNombreParameter, cPasswordParameter);
        }
    
        public virtual ObjectResult<spEstadisticas2_Result> spEstadisticas2()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spEstadisticas2_Result>("spEstadisticas2");
        }
    }
}
